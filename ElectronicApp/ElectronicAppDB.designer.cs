#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ElectronicApp
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;
    using System.Configuration;

    [Database(Name = "ElectronipApp")]
    public class ElectronicAppDBDataContext : DataContext
    {
        private static MappingSource mappingSource = new AttributeMappingSource();

        public ElectronicAppDBDataContext() : base(ConfigurationManager.ConnectionStrings["ElectronipAppConnectionString1"].ConnectionString, mappingSource)
        {
        }

        public ElectronicAppDBDataContext(IDbConnection connection) : base(connection, mappingSource)
        {
        }

        public ElectronicAppDBDataContext(string connection) : base(connection, mappingSource)
        {
        }

        public ElectronicAppDBDataContext(IDbConnection connection, MappingSource mappingSource) : base(connection, mappingSource)
        {
        }

        public ElectronicAppDBDataContext(string connection, MappingSource mappingSource) : base(connection, mappingSource)
        {
        }

        [Function(Name = "dbo.uspAlterBrokerInfo")]
        public int uspAlterBrokerInfo([Parameter(DbType = "UniqueIdentifier")] Guid? brokerid, [Parameter(DbType = "VarChar(50)")] string firstname, [Parameter(DbType = "VarChar(50)")] string lastname, [Parameter(DbType = "VarChar(100)")] string email, [Parameter(DbType = "VarChar(15)")] string phone, [Parameter(DbType = "VarChar(15)")] string faxnum, [Parameter(DbType = "VarChar(50)")] string address, [Parameter(DbType = "VarChar(50)")] string city, [Parameter(DbType = "VarChar(2)")] string state, [Parameter(DbType = "VarChar(5)")] string zip)
        {
            return (int)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { brokerid, firstname, lastname, email, phone, faxnum, address, city, state, zip }).ReturnValue;
        }

        [Function(Name = "dbo.uspAlterClientInfo")]
        public int uspAlterClientInfo([Parameter(Name = "ClientID", DbType = "UniqueIdentifier")] Guid? clientID, [Parameter(DbType = "Text")] string employer, [Parameter(DbType = "Text")] string taxid, [Parameter(DbType = "Text")] string phone, [Parameter(DbType = "Text")] string fax, [Parameter(DbType = "Text")] string address, [Parameter(DbType = "Text")] string city, [Parameter(DbType = "Text")] string state, [Parameter(DbType = "Text")] string zip)
        {
            return (int)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { clientID, employer, taxid, phone, fax, address, city, state, zip }).ReturnValue;
        }

        [Function(Name = "dbo.uspDoesEnrolleeExist")]
        public ISingleResult<uspDoesEnrolleeExistResult> uspDoesEnrolleeExist([Parameter(Name = "OwnerID", DbType = "UniqueIdentifier")] Guid? ownerID, [Parameter(Name = "FirstName", DbType = "VarChar(100)")] string firstName, [Parameter(Name = "LastName", DbType = "VarChar(100)")] string lastName, [Parameter(Name = "BirthDate", DbType = "VarChar(50)")] string birthDate)
        {
            return (ISingleResult<uspDoesEnrolleeExistResult>)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { ownerID, firstName, lastName, birthDate }).ReturnValue;
        }

        [Function(Name = "dbo.uspGetBrokerByID")]
        public ISingleResult<uspGetBrokerByIDResult> uspGetBrokerByID([Parameter(Name = "BrokerID", DbType = "UniqueIdentifier")] Guid? brokerID)
        {
            return (ISingleResult<uspGetBrokerByIDResult>)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { brokerID }).ReturnValue;
        }

        [Function(Name = "dbo.uspGetBrokerContact")]
        public ISingleResult<uspGetBrokerContactResult> uspGetBrokerContact([Parameter(Name = "OwnerID", DbType = "UniqueIdentifier")] Guid? ownerID)
        {
            return (ISingleResult<uspGetBrokerContactResult>)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { ownerID }).ReturnValue;
        }

        [Function(Name = "dbo.uspGetCarrierOptions")]
        public ISingleResult<uspGetCarrierOptionsResult> uspGetCarrierOptions()
        {
            return (ISingleResult<uspGetCarrierOptionsResult>)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[0]).ReturnValue;
        }

        [Function(Name = "dbo.uspGetClientByID")]
        public ISingleResult<uspGetClientByIDResult> uspGetClientByID([Parameter(DbType = "UniqueIdentifier")] Guid? clientID)
        {
            return (ISingleResult<uspGetClientByIDResult>)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { clientID }).ReturnValue;
        }

        [Function(Name = "dbo.uspGetClientCarriers")]
        public ISingleResult<uspGetClientCarriersResult> uspGetClientCarriers([Parameter(Name = "ClientID", DbType = "UniqueIdentifier")] Guid? clientID)
        {
            return (ISingleResult<uspGetClientCarriersResult>)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { clientID }).ReturnValue;
        }

        [Function(Name = "dbo.uspGetClientContact")]
        public ISingleResult<uspGetClientContactResult> uspGetClientContact([Parameter(Name = "OwnerID", DbType = "UniqueIdentifier")] Guid? ownerID)
        {
            return (ISingleResult<uspGetClientContactResult>)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { ownerID }).ReturnValue;
        }

        [Function(Name = "dbo.uspGetClientCoverageOptions")]
        public ISingleResult<uspGetClientCoverageOptionsResult> uspGetClientCoverageOptions([Parameter(Name = "OwnerID", DbType = "UniqueIdentifier")] Guid? ownerID)
        {
            return (ISingleResult<uspGetClientCoverageOptionsResult>)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { ownerID }).ReturnValue;
        }

        [Function(Name = "dbo.uspGetClientListByOwnerID")]
        public ISingleResult<uspGetClientListByOwnerIDResult> uspGetClientListByOwnerID([Parameter(Name = "OwnerID", DbType = "UniqueIdentifier")] Guid? ownerID)
        {
            return (ISingleResult<uspGetClientListByOwnerIDResult>)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { ownerID }).ReturnValue;
        }

        [Function(Name = "dbo.uspGetClientPlanOptions")]
        public ISingleResult<uspGetClientPlanOptionsResult> uspGetClientPlanOptions([Parameter(Name = "OwnerID", DbType = "UniqueIdentifier")] Guid? ownerID)
        {
            return (ISingleResult<uspGetClientPlanOptionsResult>)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { ownerID }).ReturnValue;
        }

        [Function(Name = "dbo.uspGetEnrolleeByID")]
        public ISingleResult<uspGetEnrolleeByIDResult> uspGetEnrolleeByID([Parameter(Name = "EnrolleeID", DbType = "UniqueIdentifier")] Guid? enrolleeID)
        {
            return (ISingleResult<uspGetEnrolleeByIDResult>)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { enrolleeID }).ReturnValue;
        }

        [Function(Name = "dbo.uspGetSubmissionsByClientID")]
        public ISingleResult<uspGetSubmissionsByClientIDResult> uspGetSubmissionsByClientID([Parameter(DbType = "UniqueIdentifier")] Guid? ownerid)
        {
            return (ISingleResult<uspGetSubmissionsByClientIDResult>)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { ownerid }).ReturnValue;
        }

        [Function(Name = "dbo.uspGetSubmissionsByClientIDBrokerView")]
        public ISingleResult<uspGetSubmissionsByClientIDBrokerViewResult> uspGetSubmissionsByClientIDBrokerView([Parameter(DbType = "UniqueIdentifier")] Guid? ownerid)
        {
            return (ISingleResult<uspGetSubmissionsByClientIDBrokerViewResult>)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { ownerid }).ReturnValue;
        }

        [Function(Name = "dbo.uspInsertClient")]
        public int uspInsertClient([Parameter(Name = "ClientID", DbType = "UniqueIdentifier")] Guid? clientID, [Parameter(Name = "OwnerID", DbType = "UniqueIdentifier")] Guid? ownerID, [Parameter(Name = "EmployerName", DbType = "VarChar(100)")] string employerName, [Parameter(Name = "TaxID", DbType = "VarChar(100)")] string taxID, [Parameter(Name = "EligableEmployees", DbType = "Int")] int? eligableEmployees)
        {
            return (int)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { clientID, ownerID, employerName, taxID, eligableEmployees }).ReturnValue;
        }

        [Function(Name = "dbo.uspInsertClientCarrier")]
        public int uspInsertClientCarrier([Parameter(Name = "CID", DbType = "UniqueIdentifier")] Guid? cID, [Parameter(Name = "Client", DbType = "UniqueIdentifier")] Guid? client, [Parameter(Name = "Carrier", DbType = "VarChar(100)")] string carrier)
        {
            return (int)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { cID, client, carrier }).ReturnValue;
        }

        [Function(Name = "dbo.uspInsertClientInfo")]
        public int uspInsertClientInfo([Parameter(DbType = "UniqueIdentifier")] Guid? contactID, [Parameter(DbType = "UniqueIdentifier")] Guid? ownerID, [Parameter(DbType = "Text")] string phone, [Parameter(DbType = "Text")] string fax, [Parameter(DbType = "Text")] string address, [Parameter(DbType = "Text")] string city, [Parameter(DbType = "Text")] string state, [Parameter(DbType = "Text")] string zip)
        {
            return (int)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { contactID, ownerID, phone, fax, address, city, state, zip }).ReturnValue;
        }

        [Function(Name = "dbo.uspInsertClientOptions")]
        public int uspInsertClientOptions([Parameter(Name = "OptionsID", DbType = "UniqueIdentifier")] Guid? optionsID, [Parameter(Name = "OwnerID", DbType = "UniqueIdentifier")] Guid? ownerID, [Parameter(DbType = "Bit")] bool? med, [Parameter(DbType = "Bit")] bool? den, [Parameter(DbType = "Bit")] bool? lif, [Parameter(DbType = "Bit")] bool? vis, [Parameter(DbType = "Bit")] bool? dis)
        {
            return (int)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { optionsID, ownerID, med, den, lif, vis, dis }).ReturnValue;
        }

        [Function(Name = "dbo.uspInsertEnrollee")]
        public int uspInsertEnrollee([Parameter(Name = "EnrolleeID", DbType = "UniqueIdentifier")] Guid? enrolleeID, [Parameter(Name = "OwnerID", DbType = "UniqueIdentifier")] Guid? ownerID, [Parameter(Name = "FirstName", DbType = "VarChar(100)")] string firstName, [Parameter(Name = "LastName", DbType = "VarChar(100)")] string lastName, [Parameter(Name = "BirthDate", DbType = "VarChar(50)")] string birthDate, [Parameter(DbType = "Bit")] bool? isComplete, [Parameter(Name = "AddedBy", DbType = "VarChar(100)")] string addedBy)
        {
            return (int)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { enrolleeID, ownerID, firstName, lastName, birthDate, isComplete, addedBy }).ReturnValue;
        }

        [Function(Name = "dbo.uspInsertSubmission")]
        public int uspInsertSubmission([Parameter(Name = "SubmissionID", DbType = "UniqueIdentifier")] Guid? submissionID, [Parameter(Name = "OwnerID", DbType = "UniqueIdentifier")] Guid? ownerID, [Parameter(Name = "FileName", DbType = "VarChar(100)")] string fileName, [Parameter(Name = "Extension", DbType = "VarChar(10)")] string extension, [Parameter(Name = "AddedBy", DbType = "VarChar(100)")] string addedBy)
        {
            return (int)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { submissionID, ownerID, fileName, extension, addedBy }).ReturnValue;
        }

        [Function(Name = "dbo.uspUpdateEnrolleeCompletionStatus")]
        public int uspUpdateEnrolleeCompletionStatus([Parameter(Name = "EnrolleeID", DbType = "UniqueIdentifier")] Guid? enrolleeID, [Parameter(DbType = "Bit")] bool? status)
        {
            return (int)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { enrolleeID, status }).ReturnValue;
        }
    }

    public partial class uspDoesEnrolleeExistResult
	{
		
		private System.Guid _EnrolleeID;
		
		public uspDoesEnrolleeExistResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnrolleeID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EnrolleeID
		{
			get
			{
				return this._EnrolleeID;
			}
			set
			{
				if ((this._EnrolleeID != value))
				{
					this._EnrolleeID = value;
				}
			}
		}
	}
	
	public partial class uspGetBrokerByIDResult
	{
		
		private System.Guid _BrokerID;
		
		private string _FirstName;
		
		private string _LastName;
		
		public uspGetBrokerByIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrokerID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BrokerID
		{
			get
			{
				return this._BrokerID;
			}
			set
			{
				if ((this._BrokerID != value))
				{
					this._BrokerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
	}
	
	public partial class uspGetBrokerContactResult
	{
		
		private System.Guid _ContactID;
		
		private System.Guid _OwnerID;
		
		private string _Address;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _PhoneNumber;
		
		private string _Fax;
		
		private string _Email;
		
		public uspGetBrokerContactResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this._ContactID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this._OwnerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this._Zip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this._PhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(15)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this._Fax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
	}
	
	public partial class uspGetCarrierOptionsResult
	{
		
		private System.Guid _CarrierID;
		
		private string _Name;
		
		public uspGetCarrierOptionsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CarrierID
		{
			get
			{
				return this._CarrierID;
			}
			set
			{
				if ((this._CarrierID != value))
				{
					this._CarrierID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class uspGetClientByIDResult
	{
		
		private System.Guid _ClientID;
		
		private System.Guid _OwnerID;
		
		private string _EmployerName;
		
		private string _TaxID;
		
		public uspGetClientByIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this._ClientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this._OwnerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string EmployerName
		{
			get
			{
				return this._EmployerName;
			}
			set
			{
				if ((this._EmployerName != value))
				{
					this._EmployerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxID", DbType="VarChar(100)")]
		public string TaxID
		{
			get
			{
				return this._TaxID;
			}
			set
			{
				if ((this._TaxID != value))
				{
					this._TaxID = value;
				}
			}
		}
	}
	
	public partial class uspGetClientCarriersResult
	{
		
		private string _carrierName;
		
		private System.Guid _carrierID;
		
		public uspGetClientCarriersResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carrierName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string carrierName
		{
			get
			{
				return this._carrierName;
			}
			set
			{
				if ((this._carrierName != value))
				{
					this._carrierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carrierID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid carrierID
		{
			get
			{
				return this._carrierID;
			}
			set
			{
				if ((this._carrierID != value))
				{
					this._carrierID = value;
				}
			}
		}
	}
	
	public partial class uspGetClientContactResult
	{
		
		private System.Guid _ContactID;
		
		private System.Guid _OwnerID;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Address;
		
		private string _City;
		
		private string _state;
		
		private string _zip;
		
		public uspGetClientContactResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this._ContactID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this._OwnerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this._Fax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this._state = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zip", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string zip
		{
			get
			{
				return this._zip;
			}
			set
			{
				if ((this._zip != value))
				{
					this._zip = value;
				}
			}
		}
	}
	
	public partial class uspGetClientCoverageOptionsResult
	{
		
		private System.Guid _OptionsID;
		
		private System.Guid _OwnerID;
		
		private bool _Medical;
		
		private bool _Dental;
		
		private bool _Life;
		
		private bool _Vision;
		
		private bool _Disability;
		
		private System.Nullable<bool> _SelfFunded;
		
		public uspGetClientCoverageOptionsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionsID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OptionsID
		{
			get
			{
				return this._OptionsID;
			}
			set
			{
				if ((this._OptionsID != value))
				{
					this._OptionsID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this._OwnerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Medical", DbType="Bit NOT NULL")]
		public bool Medical
		{
			get
			{
				return this._Medical;
			}
			set
			{
				if ((this._Medical != value))
				{
					this._Medical = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dental", DbType="Bit NOT NULL")]
		public bool Dental
		{
			get
			{
				return this._Dental;
			}
			set
			{
				if ((this._Dental != value))
				{
					this._Dental = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Life", DbType="Bit NOT NULL")]
		public bool Life
		{
			get
			{
				return this._Life;
			}
			set
			{
				if ((this._Life != value))
				{
					this._Life = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vision", DbType="Bit NOT NULL")]
		public bool Vision
		{
			get
			{
				return this._Vision;
			}
			set
			{
				if ((this._Vision != value))
				{
					this._Vision = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disability", DbType="Bit NOT NULL")]
		public bool Disability
		{
			get
			{
				return this._Disability;
			}
			set
			{
				if ((this._Disability != value))
				{
					this._Disability = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelfFunded", DbType="Bit")]
		public System.Nullable<bool> SelfFunded
		{
			get
			{
				return this._SelfFunded;
			}
			set
			{
				if ((this._SelfFunded != value))
				{
					this._SelfFunded = value;
				}
			}
		}
	}
	
	public partial class uspGetClientListByOwnerIDResult
	{
		
		private System.Guid _ClientID;
		
		private System.Guid _OwnerID;
		
		private string _EmployerName;
		
		private string _TaxID;
		
		public uspGetClientListByOwnerIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this._ClientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this._OwnerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string EmployerName
		{
			get
			{
				return this._EmployerName;
			}
			set
			{
				if ((this._EmployerName != value))
				{
					this._EmployerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxID", DbType="VarChar(100)")]
		public string TaxID
		{
			get
			{
				return this._TaxID;
			}
			set
			{
				if ((this._TaxID != value))
				{
					this._TaxID = value;
				}
			}
		}
	}
	
	public partial class uspGetClientPlanOptionsResult
	{
		
		private System.Guid _ClientPlanOptionID;
		
		private System.Guid _OwnerID;
		
		private string _PlanName;
		
		public uspGetClientPlanOptionsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientPlanOptionID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ClientPlanOptionID
		{
			get
			{
				return this._ClientPlanOptionID;
			}
			set
			{
				if ((this._ClientPlanOptionID != value))
				{
					this._ClientPlanOptionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this._OwnerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PlanName
		{
			get
			{
				return this._PlanName;
			}
			set
			{
				if ((this._PlanName != value))
				{
					this._PlanName = value;
				}
			}
		}
	}
	
	public partial class uspGetEnrolleeByIDResult
	{
		
		private System.Guid _EnrolleeID;
		
		private System.Guid _OwnerID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _BirthDate;
		
		private bool _SubmissionComplete;
		
		private string _AddedBy;
		
		private System.DateTime _AddedDate;
		
		public uspGetEnrolleeByIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnrolleeID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EnrolleeID
		{
			get
			{
				return this._EnrolleeID;
			}
			set
			{
				if ((this._EnrolleeID != value))
				{
					this._EnrolleeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this._OwnerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionComplete", DbType="Bit NOT NULL")]
		public bool SubmissionComplete
		{
			get
			{
				return this._SubmissionComplete;
			}
			set
			{
				if ((this._SubmissionComplete != value))
				{
					this._SubmissionComplete = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this._AddedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedDate", DbType="DateTime NOT NULL")]
		public System.DateTime AddedDate
		{
			get
			{
				return this._AddedDate;
			}
			set
			{
				if ((this._AddedDate != value))
				{
					this._AddedDate = value;
				}
			}
		}
	}
	
	public partial class uspGetSubmissionsByClientIDResult
	{
		
		private System.Guid _SubmissionID;
		
		private System.Guid _OwnerID;
		
		private string _FileName;
		
		private string _Extension;
		
		private string _AddedBy;
		
		private System.DateTime _AddedDate;
		
		public uspGetSubmissionsByClientIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SubmissionID
		{
			get
			{
				return this._SubmissionID;
			}
			set
			{
				if ((this._SubmissionID != value))
				{
					this._SubmissionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this._OwnerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this._FileName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this._Extension = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this._AddedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedDate", DbType="DateTime NOT NULL")]
		public System.DateTime AddedDate
		{
			get
			{
				return this._AddedDate;
			}
			set
			{
				if ((this._AddedDate != value))
				{
					this._AddedDate = value;
				}
			}
		}
	}
	
	public partial class uspGetSubmissionsByClientIDBrokerViewResult
	{
		
		private System.Nullable<System.DateTime> _addeddate;
		
		private string _lastname;
		
		private string _firstname;
		
		private string _birthdate;
		
		public uspGetSubmissionsByClientIDBrokerViewResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addeddate", DbType="DateTime")]
		public System.Nullable<System.DateTime> addeddate
		{
			get
			{
				return this._addeddate;
			}
			set
			{
				if ((this._addeddate != value))
				{
					this._addeddate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this._lastname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this._firstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthdate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string birthdate
		{
			get
			{
				return this._birthdate;
			}
			set
			{
				if ((this._birthdate != value))
				{
					this._birthdate = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
