#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ElectronicApp
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;
    using System.Configuration;

    [Database(Name = "ElectronicApp_Storage")]
    public class ElectronicAppStorageDBDataContext : DataContext
    {
        private static MappingSource mappingSource = new AttributeMappingSource();

        public ElectronicAppStorageDBDataContext() : base(ConfigurationManager.ConnectionStrings["ElectronicApp_StorageConnectionString"].ConnectionString, mappingSource)
        {
        }

        public ElectronicAppStorageDBDataContext(IDbConnection connection) : base(connection, mappingSource)
        {
        }

        public ElectronicAppStorageDBDataContext(string connection) : base(connection, mappingSource)
        {
        }

        public ElectronicAppStorageDBDataContext(IDbConnection connection, MappingSource mappingSource) : base(connection, mappingSource)
        {
        }

        public ElectronicAppStorageDBDataContext(string connection, MappingSource mappingSource) : base(connection, mappingSource)
        {
        }

        [Function(Name = "dbo.uspDeleteBrokerImageByOwnerID")]
        public int uspDeleteBrokerImageByOwnerID([Parameter(DbType = "UniqueIdentifier")] Guid? owner)
        {
            return (int)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { owner }).ReturnValue;
        }

        [Function(Name = "dbo.uspGetBrokerImageByOwnerID")]
        public ISingleResult<uspGetBrokerImageByOwnerIDResult> uspGetBrokerImageByOwnerID([Parameter(DbType = "UniqueIdentifier")] Guid? owner)
        {
            return (ISingleResult<uspGetBrokerImageByOwnerIDResult>)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { owner }).ReturnValue;
        }

        [Function(Name = "dbo.uspInsertBrokerImage")]
        public int uspInsertBrokerImage([Parameter(DbType = "UniqueIdentifier")] Guid? attid, [Parameter(DbType = "UniqueIdentifier")] Guid? owner, [Parameter(DbType = "Image")] Binary att, [Parameter(DbType = "VarChar(100)")] string fn, [Parameter(DbType = "VarChar(10)")] string ext)
        {
            return (int)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { attid, owner, att, fn, ext }).ReturnValue;
        }

        [Function(Name = "dbo.uspInsertSubmission")]
        public int uspInsertSubmission([Parameter(Name = "SubmissionAttachmentID", DbType = "UniqueIdentifier")] Guid? submissionAttachmentID, [Parameter(Name = "OwnerID", DbType = "UniqueIdentifier")] Guid? ownerID, [Parameter(Name = "Attachment", DbType = "Image")] Binary attachment, [Parameter(Name = "FileName", DbType = "VarChar(100)")] string fileName, [Parameter(Name = "Extension", DbType = "VarChar(10)")] string extension, [Parameter(Name = "AddedBy", DbType = "VarChar(50)")] string addedBy)
        {
            return (int)base.ExecuteMethodCall(this, (MethodInfo)MethodBase.GetCurrentMethod(), new object[] { submissionAttachmentID, ownerID, attachment, fileName, extension, addedBy }).ReturnValue;
        }
    }

	
	public partial class uspGetBrokerImageByOwnerIDResult
	{
		
		private System.Guid _AttachmentID;
		
		private System.Guid _AssociatedWith;
		
		private System.Data.Linq.Binary _Attachment;
		
		private string _FileName;
		
		private string _Extension;
		
		public uspGetBrokerImageByOwnerIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AttachmentID
		{
			get
			{
				return this._AttachmentID;
			}
			set
			{
				if ((this._AttachmentID != value))
				{
					this._AttachmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociatedWith", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AssociatedWith
		{
			get
			{
				return this._AssociatedWith;
			}
			set
			{
				if ((this._AssociatedWith != value))
				{
					this._AssociatedWith = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment", DbType="Image NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary Attachment
		{
			get
			{
				return this._Attachment;
			}
			set
			{
				if ((this._Attachment != value))
				{
					this._Attachment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this._FileName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this._Extension = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
